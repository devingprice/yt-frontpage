Things I should be able to do://////////////////////////////

Move drag Handle Out of shelf header (make it float to left of shelf
Edit header
Link to go to collection page
Submit reorder on shelf drop

deleteCollection
    if Owned, request server delete
    if followed, remove linker        !!! To Add Later On
Rename Collection
Change Collection Settings
    DisplayType

ReorderCollections
    Would love to store order on userCollection table on server, dunno if possible
    Add user setting for order on server
    Load this order with userCollections
    make initialLoad use this order

Delete Channel
    Frontend doesn't pass around server dhannelId's to request this with
    May have to rewrite server side to use collectionId + yt channelId
    Need to add UI to do this with
        Trashcan appear while dragging, or x in pill
Move Channel
    write a server side function to both remove and add channel

Change User Settings  *works locally at the moment, just need to look over it
    draggable shelves
        Could make this a user setting, not for now though
    show channels


Fetch all youtube channels
Make channel search work

Add X to delete collection
Add button to edit collection name

FINISHED ACTIONS: //////////////////////////////////////
createCollection    locally made and lets the server know through serverAction
Add Channel     Works
Login
Logout
Register
Request User's Collections
Request Single Collection
Request Feeds for User's Collections
Request Feeds for Single Collection
Make Collection take route :collectionId in order to load correct

EXTENSIONS: /////////////////////////////////////////////
Add gfycat-like "dogcatfish" style links to db and use this for collection route
Add "follow collection" functionality
    If not owned collection, collection page has follow button
    Can't edit channels in followed collection
Add other "sections" than just collections, like youtube "stories" from mobile app
Allow link to youtube account, pulls subscriptions for subscriptionsComponent

Make a mobile friend version



Reducers = {
    authentication: {
        user: loadToken()
    }
}
App = {
    makeUserRequest( userId, token );//collections are "user's" collections, not collection page
    if(success){
        setStateToCollections(response);
    } else if ( failure ) {
        logOut()
    }
}

Home = {
    if(loggedIn){
        loadFeeds(collectionsChannels);
    } else {
        loadFeeds(defaultCollectionsChannels);
    }

}

Collection = {
    loadFeeds(collectionFromURL)
}



Lifecycle
1.
HomePage
    If logged in:
    Fetch Collections
        then:
        Fetch Feeds

    if logged out:
    Use default collections
        then:
        Fetch Feeds
2.
Collection



WHAT IM WORKING ON RIGHT NOW

getAllUserCOllections is currently returning the collection info and users, not actual collection channels
Add fetch usercollections to lifecycle (on start, on update)
Server Collections format does not match front-end

User is logged in locally but token is timed out, need to require login if user is timed out

make index load app out of components/containers folder
remove fakebackend
move all helpers to same file to condense

QUESTIONS
in serialize, can i add settings to the usercollection table
need to implement a gfycat "dogcatperson" style url generator to use as links to collections









